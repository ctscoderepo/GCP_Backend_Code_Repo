version: '2'

services:
  set_mappings:
    image: 'logstash:6.5.4'
    network_mode: 'host'
    volumes:
      - './etl:/etl'
    entrypoint: /bin/bash
    command: >
      -c "
      curl --user elastic:changeme -XDELETE -H 'Content-Type: application/json' 'http://localhost:9200/product_catalog?pretty' &&
      curl --user elastic:changeme -XPUT -H 'Content-Type: application/json'  'http://localhost:9200/product_catalog?pretty' --upload-file /etl/product_elasticsearch_mapping.json --retry 2"
    depends_on:
      - kibana

  logstash:
    image: 'logstash:6.5.4'
    network_mode: 'host'
    volumes:
      - './etl:/etl'
    entrypoint: /bin/bash
    environment:
      - ES_HOSTS=localhost:9200
    command: >
      -c "
      /etl/setupProductData.sh
      "
    depends_on:
      - set_mappings

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
    container_name: elasticsearch
    environment:
      cluster.name: elasticsearch
      xpack.security.enabled: "false"
      xpack.monitoring.enabled: "false"
      xpack.graph.enabled: "false"
      xpack.watcher.enabled: "false"
      network.publish_host: _local_
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    image: docker.elastic.co/kibana/kibana:6.5.4
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:9200"
    depends_on:
      - elasticsearch

  search-service:
    container_name: search-service
    build:
      context: ../
      dockerfile: Dockerfile
    ports:
      - '8100:8080'
      - '18100:8787'
    entrypoint: /bin/sh
    command: >
      -c "
      java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8787,suspend=n -jar -Dspring.profiles.active=docker /app.jar
      "
    depends_on:
      - elasticsearch
      #- logstash
      #- set_mappings
